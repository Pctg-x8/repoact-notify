Parameters:
  RepositoryStackName:
    Type: String
  TargetPath:
    Type: String
  EnableDebugLog:
    Type: String
    AllowedValues:
      - "true"
      - "false"
    Default: "false"

Conditions:
  EnableDebugLog: !Equals
    - !Ref EnableDebugLog
    - "true"

Resources:
  FunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Function}
      RetentionInDays: 1
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /service-role/
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: lambda.amazonaws.com
  ExecutionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: LambdaLogStream
      Roles:
        - !Ref ExecutionRole
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource:
              - !GetAtt FunctionLogGroup.Arn
  Function:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: Peridot-GithubActivityNotification
      Description: Notification Sender for Activities on GitHub(Pctg-x8/peridot)
      Role: !GetAtt ExecutionRole.Arn
      PackageType: Image
      Code:
        ImageUri:
          Fn::ImportValue: !Sub ${RepositoryStackName}-MasterContainerUri
      KmsKeyArn: arn:aws:kms:ap-northeast-1:208140986057:key/03f49a00-e31f-4e48-88e2-bdf302880929
      Environment:
        Variables:
          GITHUB_API_TOKEN: "{{resolve:secretsmanager:GitHub:SecretString:p-repoact-notify}}"
          GITHUB_WEBHOOK_VERIFICATION_KEY: "{{resolve:secretsmanager:GitHub:SecretString:whsec-repoact-notify}}"
          SLACK_BOT_TOKEN: "{{resolve:secretsmanager:Slack:SecretString:koyuki-bot}}"
          RUST_LOG: !If
            - EnableDebugLog
            - trace
            - error
  InvocationPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref Function
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ""
        - - !Sub "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:"
          - !ImportValue GitHubWebhookGateApiId
          - !Sub "/$default/POST${TargetPath}"
  Integration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !ImportValue GitHubWebhookGateApiId
      Description: Lambda Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt Function.Arn
      IntegrationMethod: POST
      PayloadFormatVersion: "2.0"
  Route:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !ImportValue GitHubWebhookGateApiId
      RouteKey: !Sub POST ${TargetPath}
      Target: !Join
        - /
        - - integrations
          - !Ref Integration
